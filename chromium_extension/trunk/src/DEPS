# Copyright 2009 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

vars = {
  "chromium_deps_root": "src/third_party/chromium_deps",
  "libpagespeed_svn": "https://github.com/songlibo/page-speed/trunk",
  "libpagespeed_trunk": "https://github.com/songlibo/page-speed/trunk/lib/trunk",
  "libpagespeed_revision": "@head",
  "libpagespeed_deps_root": "src/third_party/libpagespeed_deps",

  # TODO: remove these once gclient is able to correctly process the
  # commented-out line below.
  "chromium_trunk": "https://src.chromium.org/svn/trunk",
  "chromium_revision": "@161115",
}

deps = {

  # Fetch libpagespeed DEPS so we can sync our other dependencies
  # relative to it.
  Var("libpagespeed_deps_root"):
    File(Var("libpagespeed_trunk") + "/src/DEPS" +
      Var("libpagespeed_revision")),

  # Fetch chromium DEPS so we can sync our other dependencies relative
  # to it.
  #
  # NOTE: gclient is unable to process the following line, so we're
  # forced to explicitly use our chromium revision instead.
  # Var("chromium_deps_root"): From(Var("libpagespeed_deps_root")),
  Var("chromium_deps_root"):
    File(Var("chromium_trunk") + "/src/DEPS" + Var("chromium_revision")),

  "src/base":
    Var("libpagespeed_trunk") + "/src/base" + Var("libpagespeed_revision"),

  "src/build/temp_gyp":
    (Var("libpagespeed_trunk") + "/src/build/temp_gyp" +
     Var("libpagespeed_revision")),

  "src/build/nacl_header_stubs":
    (Var("libpagespeed_trunk") + "/src/build/nacl_header_stubs" +
     Var("libpagespeed_revision")),

  "src/googleurl_noconv":
    (Var("libpagespeed_trunk") + "/src/googleurl_noconv" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/build":
    (Var("libpagespeed_trunk") + "/src/build" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/build/internal":
    Var("chromium_trunk") + "/src/build/internal" + Var("chromium_revision"),

  "src/third_party/libpagespeed/src/pagespeed":
    (Var("libpagespeed_trunk") + "/src/pagespeed" +
     Var("libpagespeed_revision")),

  "src/third_party/libpagespeed/src/third_party":
    (Var("libpagespeed_trunk") + "/src/third_party" +
     Var("libpagespeed_revision")),

  "src/build/ios": From(Var("libpagespeed_deps_root")),
  "src/build/linux": From(Var("libpagespeed_deps_root")),
  "src/build/mac": From(Var("libpagespeed_deps_root")),
  "src/build/win": From(Var("libpagespeed_deps_root")),
  "src/build/util": From(Var("libpagespeed_deps_root")),
  "src/build/internal": From(Var("libpagespeed_deps_root")),
  "src/testing": From(Var("libpagespeed_deps_root")),
  "src/third_party/domain_registry_provider/src": From(Var("libpagespeed_deps_root")),
  "src/net/instaweb": From(Var("libpagespeed_deps_root")),
  "src/third_party/modp_b64": From(Var("libpagespeed_deps_root")),
  "src/third_party/npapi":
    "http://npapi-sdk.googlecode.com/svn/trunk/headers@7",
  "src/third_party/protobuf": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/base": From(Var("libpagespeed_deps_root")),
  "src/third_party/chromium/src/build": From(Var("libpagespeed_deps_root")),
  "src/tools/clang": From(Var("libpagespeed_deps_root")),

  "src/googleurl": From(Var("chromium_deps_root")),
  "src/testing/gtest": From(Var("chromium_deps_root")),
  "src/tools/grit": From(Var("chromium_deps_root")),
  "src/tools/gyp": From(Var("chromium_deps_root")),

  "src/third_party/gflags": Var("libpagespeed_svn") + "/deps/gflags-2.0/",
  "src/third_party/giflib": Var("libpagespeed_svn") + "/deps/giflib-4.1.6/",
  "src/third_party/icu": Var("libpagespeed_svn") + "/deps/icu461/",
  "src/third_party/libjpeg": Var("libpagespeed_svn") + "/deps/jpeg-8c/",
  "src/third_party/libpng": Var("libpagespeed_svn") + "/deps/libpng-1.5.4/",
  "src/third_party/libwebp": Var("libpagespeed_svn") + "/deps/libwebp-0.2.0/",
  "src/third_party/nacl_sdk": Var("libpagespeed_svn") + "/deps/nacl_sdk/",
  "src/third_party/optipng": Var("libpagespeed_svn") + "/deps/optipng-0.7.4/",
  "src/third_party/zlib": Var("libpagespeed_svn") + "/deps/zlib-1.2.5/",
}


deps_os = {
  "win": {
    "src/third_party/cygwin": From(Var("chromium_deps_root")),
    "src/third_party/python_26": From(Var("chromium_deps_root")),
  },
  "mac": {
  },
  "unix": {
  },
}


hooks = [
  {
    # Pull clang on mac. If nothing changed, or on non-mac platforms, this takes
    # zero seconds to run. If something changed, it downloads a prebuilt clang,
    # which takes ~20s, but clang speeds up builds by more than 20s.
    "pattern": ".",
    "action": ["python", "src/tools/clang/scripts/update.py", "--mac-only"],
  },
  {
    # A change to a .gyp, .gypi, or to GYP itself should run the generator.
    "pattern": ".",
    "action": ["python", "src/build/gyp_chromium"],
  },
]
